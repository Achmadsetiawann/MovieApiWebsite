{"ast":null,"code":"import _classCallCheck from \"C:\\\\Wawan\\\\Latihan\\\\Movie Web App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Wawan\\\\Latihan\\\\Movie Web App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Wawan\\\\Latihan\\\\Movie Web App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Wawan\\\\Latihan\\\\Movie Web App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Wawan\\\\Latihan\\\\Movie Web App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Wawan\\\\Latihan\\\\Movie Web App\\\\src\\\\components\\\\Movie\\\\Movie.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movie)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    _this.fetchItems = function (endpoint) {\n      fetch(endpoint).then(function (result) {\n        return result.json();\n      }).then(function (result) {\n        if (result.status_code) {\n          _this.setState({\n            loading: false\n          });\n        } else {\n          _this.setState({\n            movie: result\n          }, function () {\n            // ... fetch actors in the setstate callback function\n            var endpoint = \"\".concat(API_URL, \"movie/\").concat(_this.props.match.params.movieId, \"/credit?api_key=\").concat(API_KEY);\n            fetch(endpoint).then(function (result) {\n              return result.json();\n            }).then(function (result) {\n              var directors = result.crew.filter(function (member) {\n                return member.job === \"Director\";\n              });\n\n              _this.setState({\n                actors: result.cast,\n                directors: directors,\n                loading: false\n              });\n            });\n          });\n        }\n      }).catch(function (error) {\n        return console.error('Error', error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        loading: true\n      }); // First Fetch the movie ...\n\n      var endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"?api_key=\").concat(API_KEY, \"&language=en-US\");\n      this.fetchItems(endpoint);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"rmdb-movie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(MovieInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(MovieInfoBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(FourColGrid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["C:\\Wawan\\Latihan\\Movie Web App\\src\\components\\Movie\\Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","fetchItems","endpoint","fetch","then","result","json","status_code","setState","props","match","params","movieId","crew","filter","member","job","cast","catch","error","console"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;;IAEMC,K;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,OAAO,EAAE;AAJL,K;;UAcRC,U,GAAa,UAACC,QAAD,EAAc;AACvBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACM,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,OADZ,EAECF,IAFD,CAEM,UAAAC,MAAM,EAAI;AACZ,YAAGA,MAAM,CAACE,WAAV,EAAuB;AACnB,gBAAKC,QAAL,CAAc;AAAER,YAAAA,OAAO,EAAE;AAAX,WAAd;AACH,SAFD,MAEO;AACH,gBAAKQ,QAAL,CAAc;AAAEX,YAAAA,KAAK,EAAEQ;AAAT,WAAd,EAAiC,YAAM;AACnC;AACA,gBAAMH,QAAQ,aAAMf,OAAN,mBAAsB,MAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,6BAAwExB,OAAxE,CAAd;AACAe,YAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACM,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,aADZ,EAECF,IAFD,CAEM,UAAAC,MAAM,EAAI;AACZ,kBAAMN,SAAS,GAAGM,MAAM,CAACQ,IAAP,CAAYC,MAAZ,CAAoB,UAACC,MAAD;AAAA,uBAAYA,MAAM,CAACC,GAAP,KAAe,UAA3B;AAAA,eAApB,CAAlB;;AACA,oBAAKR,QAAL,CAAe;AACXV,gBAAAA,MAAM,EAAEO,MAAM,CAACY,IADJ;AAEXlB,gBAAAA,SAAS,EAATA,SAFW;AAGXC,gBAAAA,OAAO,EAAE;AAHE,eAAf;AAKH,aATD;AAUH,WAbD;AAcH;AACJ,OArBD,EAsBCkB,KAtBD,CAsBO,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAAJ;AAAA,OAtBZ;AAuBH,K;;;;;;;wCA/BmB;AAChB,WAAKX,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAC;AAAV,OAAd,EADgB,CAEhB;;AACA,UAAME,QAAQ,aAAMf,OAAN,mBAAsB,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,sBAAiExB,OAAjE,oBAAd;AACA,WAAKa,UAAL,CAAgBC,QAAhB;AACH;;;6BA6BQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH;;;;EApDehB,S;;AAuDpB,eAAeS,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading:true })\r\n        // First Fetch the movie ...\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            if(result.status_code) {\r\n                this.setState({ loading: false });\r\n            } else {\r\n                this.setState({ movie: result }, () => {\r\n                    // ... fetch actors in the setstate callback function\r\n                    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credit?api_key=${API_KEY}`;\r\n                    fetch(endpoint)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        const directors = result.crew.filter( (member) => member.job === \"Director\");\r\n                        this.setState ({\r\n                            actors: result.cast,\r\n                            directors,\r\n                            loading: false\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        })\r\n        .catch(error => console.error('Error', error))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                <Navigation />\r\n                <MovieInfo />\r\n                <MovieInfoBar />\r\n                <FourColGrid />\r\n                <Spinner />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}